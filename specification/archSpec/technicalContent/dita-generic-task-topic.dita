<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="dita_generic_task_topic" xml:lang="en-US">
	<title>General task</title>
  <shortdesc>A general task topic answers the "How do I?" question by
    providing instructions and other necessary information that enables
    users to complete the task successfully. It has a content model that is
    more relaxed than that of the strict
    task.<!-- The general-task document type serves as the base for the strict-task document type. It also can be used to create new document types or specializations.--></shortdesc>
	<conbody>
    <!--<section id="purpose"><title>Purpose</title><p>The purpose of the general task topic is to provide the user with comprehensive instructions for performing a task. In addition, its content model can facilitate the migration of procedural information that does not follow the content model of the strict task topic.</p></section>-->
    <!--<section id="section_4B12CAE12AF84259B9DED26BC5F9FEDE"><title>The purpose of the general task information type</title><p>Like the DITA strict task document type, the general task document and information types contain the essential building blocks to provide procedural information. Both task information types answer the "How do I?" question by providing step-by-step instructions that detail the requirements that must be fulfilled, the actions that must be performed, and the order in which the actions must be performed. Both task topics include sections for describing the context, prerequisites, expected results, and other aspects of a task.</p><p id="p_14C11461E6164EEDB93CDECE17D657C5">The general task information type is specifically designed to accommodate task specializations that differ from the DITA task information type. It might also be used for the conversion of loosely structured tasks from other sources into DITA before they are restructured to follow the more restrictive DITA task model.</p></section>-->
    <section id="content-model">
      <title>Content model</title>
      <p>The general task topic is divided into three parts:</p>
      <dl>
        <dlentry>
          <dt>Introduction</dt>
          <dd>This portion of the topic can contain the following
            structural sections:<ul>
              <li>Prerequisites: <xref keyref="elements-prereq"
                    ><xmlelement>prerequisites</xmlelement></xref></li>
              <li>Contextual information: <xref keyref="elements-context"
                    ><xmlelement>context</xmlelement></xref></li>
              <li>Sections: <xmlelement>section</xmlelement></li>
            </ul>
            <p>These sections are all optional. They can appear in any
              order and can occur multiple times.</p></dd>
        </dlentry>
        <dlentry>
          <dt>Procedural instructions</dt>
          <dd>This portion of the topic can contain only one of the
            following structural sections:<ul>
              <li>Steps: <xref keyref="elements-steps"
                    ><xmlelement>steps</xmlelement></xref></li>
              <li>Steps informal: <xref keyref="elements-steps-informal"
                    ><xmlelement>steps-informal</xmlelement></xref></li>
              <li>Steps unordered: <xref keyref="elements-steps-unordered"
                    ><xmlelement>steps-unordered</xmlelement></xref></li>
            </ul></dd>
        </dlentry>
        <dlentry>
          <dt>Post-instructions</dt>
          <dd>The section of the topic can contain the following structural sections:<ol>
              <li>Result: <xref keyref="elements-result"
                    ><xmlelement>result</xmlelement></xref></li>
              <li>Troubleshooting information: <xref
                  keyref="elements-tasktroubleshooting"
                    ><xmlelement>tasktroubleshooting</xmlelement></xref></li>
              <li>Example: <xmlelement>example</xmlelement></li>
              <li><ph rev="review-a">What to do next</ph>: <xref
                  keyref="elements-postreq"
                    ><xmlelement>postreq)</xmlelement></xref></li>
            </ol><p>While all of the above structural components are
              optional, they must occur in the outlined order. Examples and
              post-requisites can occur multiple times.</p></dd>
        </dlentry>
      </dl>
    </section>
    <section id="example" rev="review-a">
      <title>Example</title>
      <p>The following code sample illustrates the relaxed content model of
        the general task topic. Note that there are multiple
          <xmlelement>prereq</xmlelement> elements and that they are
        preceded by a <xmlelement>context</xmlelement> element. The
        stylesheets used to generate output produce different labels for
        each of the <xmlelement>prereq</xmlelement> sections, triggered by
        the value of the <xmlatt>outputclass</xmlatt> attribute.</p>
      <codeblock>&lt;task id="changing_a_tire">
  &lt;title>Changing a tire&lt;/title>
  &lt;taskbody>
    &lt;context>&lt;p>A flat tire typically shows up unexpectedly and catapults itself onto the 
        top of your priority list. A flat tire can happen to anyone at any time. It doesn’t 
        matter if you were already running late or if you’re wearing a cocktail dress. 
        Regardless of your situation, the basic mechanics of changing a tire are the same 
        whether you’re working with a car, truck, van, or SUV. &lt;/p>
    &lt;/context>
    &lt;prereq outputclass="safety">
      &lt;ul>
        &lt;li>Find a safe place to pull over. The ground should be solid and
          level to keep your car from rolling. If you’re on the side of the
          road, pull over as far possible. Avoid stopping near any bends in
          the road, as this reduces visibility for both you and other
          drivers. If you’re in a dark or unsafe area, carefully drive to a
          better spot.&lt;/li>
        &lt;li>Use your hazard lights and parking brake to keep yourself and
          your vehicle safe by increasing your visibility and decreasing
          the vehicle’s ability to roll.&lt;/li>
      &lt;/ul>
    &lt;/prereq>
    &lt;prereq outputclass="tools">&lt;p>At the bare minimum, you’ll need a jack, wrench, and 
        a spare tire. These three items should always be in your vehicle just in case a
        flat tire occurs. Additional items that can make tire changing a little easier 
        include:&lt;/p>
      &lt;ul>
        &lt;li>Flashlight&lt;/li>
        &lt;li>Gloves&lt;/li>
        &lt;li>Mat for kneeling&lt;/li>
        &lt;li>Rain poncho&lt;/li>
        &lt;li>Tire gauge&lt;/li>
        &lt;li>Your vehicle’s owner’s manual&lt;/li>
      &lt;/ul>
    &lt;/prereq>
    &lt;steps>
      &lt;!-- ... -->
    &lt;/steps>
    &lt;postreq>
      &lt;!-- ... -->
    &lt;/postreq>
  &lt;/taskbody>
&lt;/task></codeblock>
    </section>
    <!--<section id="section_0C8A068CDF1D498F9FF534D3CE88CF2F"><title>The structure of the general task topic</title><p id="p_366CB29A7238470BA9070488F953FBDD">The <xmlelement>task</xmlelement> element is the top-level element for the general task topic. The general task topic contains a <xmlelement>title</xmlelement>, a short description or <xmlelement>abstract</xmlelement>, a <xmlelement>prolog</xmlelement>, <xmlelement>taskbody</xmlelement> for the main task content, and <xmlelement>related-links</xmlelement>.</p><p id="p_7262A46437C34654BD4E46DC49BC6FD4">The following elements are described here because they are introduced as part of the general task model. All other elements are described in the strict task topic.<draft-comment author="robander" audience="spec-editors" time="25 may 2021">this paragraph also makes me think we're adding to confusion by defining some elements here, and some in "strict task"</draft-comment></p><dl><dlentry><dt><xmlelement>section</xmlelement> </dt><dd>Represents an organizational division in a task topic. Sections organize subsets of information within the larger topic. Sections cannot be nested. A section can have an optional <xmlelement>title</xmlelement>. </dd></dlentry><dlentry><dt><xmlelement>steps-informal</xmlelement> </dt><dd>Describes procedural task information that would not normally be ordered as <xmlelement>steps</xmlelement>, such as a group of general procedures that might all be applied in a particular situation. Instead of <xmlelement>step</xmlelement>, the <xmlelement>steps-informal</xmlelement> element uses <xmlelement>ol</xmlelement> and <xmlelement>ul</xmlelement> elements, which are less strictly defined than the <xmlelement>step</xmlelement> element. When converting legacy content, it might be simpler to convert numbered lists to <xmlelement>ol</xmlelement> elements than to <xmlelement>step</xmlelement> elements. </dd></dlentry></dl></section>-->
    <!--<section id="section_9CD7027683F049709DD7BCD431B421D8"><title>Comparison of general and strict task</title><p id="p_5533CE00385F44929D16A29C78727AF9">The following table compares the structures of general and strict task:</p><table id="table_D297CDD1D8B24415A28A74A37372B423"><tgroup cols="2"><colspec colname="col1"/><colspec colname="col2"/><thead><row><entry valign="top">General <xmlelement>taskbody</xmlelement> </entry><entry valign="top">Strict <xmlelement>taskbody</xmlelement> constraint </entry></row></thead><tbody><row><entry>prerequisite (optional, in any order, any number) </entry><entry>prerequisite (optional, one only, must precede context) </entry></row><row><entry>context (optional, in any order, any number) </entry><entry>context (optional, one only, must follow prerequisite) </entry></row><row><entry>section (optional, in any order, any number) </entry><entry>(not defined for strict <xmlelement>taskbody</xmlelement>) </entry></row><row><entry>steps </entry><entry>steps </entry></row><row><entry>steps-unordered </entry><entry>steps-unordered </entry></row><row><entry>steps-informal </entry><entry>(not allowed in strict <xmlelement>taskbody</xmlelement>) </entry></row><row><entry>result (optional, one only, precedes example) </entry><entry>result (optional, one only, precedes example) </entry></row><row><entry>tasktroubleshooting (optional, one only)</entry><entry>tasktroubleshooting (optional, one only)</entry></row><row><entry>example (optional, any number, precedes post-req) </entry><entry>example (optional, one only, precedes post-req) </entry></row><row><entry>post-requisite (optional, any number) </entry><entry>post-requisite (optional, one only) </entry></row></tbody></tgroup></table></section>-->
	</conbody>
</concept>
